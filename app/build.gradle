import config.Versions
apply plugin: 'com.android.application'

android {
    compileSdkVersion Versions.compileSdkVersion
    println("appcompt = ${Versions.Dep.appComp}")
    defaultConfig {
        applicationId Versions.applicationId
        minSdkVersion Versions.minSdkVersion
        targetSdkVersion Versions.targetSdkVersion
        versionCode Versions.versionCode
        versionName Versions.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release{
            storeFile file("./channel_release.jks")
            storePassword "123456"
            keyPassword "123456"
            keyAlias "key0"
            v1SigningEnabled true
            v2SigningEnabled false
        }

        uat{
            storeFile file("./channel_uat.jks")
            storePassword "123456"
            keyPassword "123456"
            keyAlias "key0"
            v1SigningEnabled true
            v2SigningEnabled false
        }

        debug {
            storeFile file("./debug.keystore")
            storePassword "android"
            keyPassword "android"
            keyAlias "androiddebugkey"
            v1SigningEnabled true
            v2SigningEnabled false
        }
    }

    // 设置文件输出名
    android.applicationVariants.all {
        variant ->
            variant.outputs.all {
                // 依据变种名 设置后缀
                def variantName = variant.name
                def versionNameSuffix = ""
                if (variantName.contains("ali")){
                    versionNameSuffix = Versions.Ali.versionNameSuffix
                }else if (variantName.contains("baidu")){
                    versionNameSuffix = Versions.Baidu.versionNameSuffix
                }
                def buildTime = new Date().format("yyyyMMdd", TimeZone.getTimeZone("GMT+08:00"))
                // app包名称
                outputFileName = Versions.appName+"_"+buildType.name+"_v" +
                        Versions.versionName+versionNameSuffix+"_" + buildTime + ".apk"
            }
    }

    /**
     * productFlavors - 渠道集合
     *
     * 定义渠道 baidu & ali
     *
     */

    // 设定变种的纬度
    flavorDimensions "company"

    productFlavors{
        baidu{
            // 设置渠道名为baidu
            dimension("company")
        }

        ali{
            // 设置渠道为ali
            // 为渠道设置变种纬度
            dimension("company")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            zipAlignEnabled true
            // 修改app名 对应manifest.xml下 @string/app_name2
            resValue('string','app_name2','"多渠道"')
        }

        debug{
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            zipAlignEnabled true
            applicationIdSuffix '.debug'
            resValue('string','app_name2','"多渠道debug"')
        }

        uat{
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.uat
            zipAlignEnabled true
            applicationIdSuffix '.uat'
            resValue('string','app_name2','"多渠道uat"')
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
